<ui:composition template="/WEB-INF/templates/defaultComponentBase.xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:showcase="http://java.sun.com/jsf/composite/cc"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:b="http://butterfaces.larmic.de/components">

    <ui:define name="header">
        <strong>b:table</strong> The table tag renders an HTML element of the type "table".
    </ui:define>

    <ui:define name="tagsContainers">
        <showcase:tagsContainer label="Tag attributes">
            <showcase:tagBooleanControl label="rendered" value="#{tableShowcaseSingleCodeComponent.rendered}"/>
            <showcase:tagBooleanControl label="tableBordered" value="#{tableShowcaseSingleCodeComponent.tableBordered}"/>
            <showcase:tagBooleanControl label="tableCondensed" value="#{tableShowcaseSingleCodeComponent.tableCondensed}"/>
            <showcase:tagBooleanControl label="tableStriped" value="#{tableShowcaseSingleCodeComponent.tableStriped}"/>
            <showcase:tagBooleanControl label="showRefreshButton" value="#{tableShowcaseSingleCodeComponent.showRefreshButton}"/>
            <showcase:tagBooleanControl label="showToggleColumnButton"
                                        value="#{tableShowcaseSingleCodeComponent.showToggleColumnButton}"/>
        </showcase:tagsContainer>

        <showcase:tagsContainer label="Tag controls">
            <showcase:tagEnumControl label="ajax selection"
                                     value="#{tableShowcaseSingleCodeComponent.selectionAjaxType}"
                                     values="#{tableShowcaseSingleCodeComponent.ajaxSelectionTypes}"/>
            <showcase:tagEnumControl label="custom toolbar"
                                     value="#{tableShowcaseSingleCodeComponent.toolBarType}"
                                     values="#{tableShowcaseSingleCodeComponent.toolBarTypes}"/>
            <showcase:tagEnumControl label="column width"
                                     value="#{tableShowcaseSingleCodeComponent.fourthColumnWidthType}"
                                     values="#{tableShowcaseSingleCodeComponent.twoColumnWidthTypes}"/>
            <showcase:tagEnumControl label="table model"
                                     value="#{tableShowcaseSingleCodeComponent.tableModelType}"
                                     values="#{tableShowcaseSingleCodeComponent.tableModelTypes}"/>
        </showcase:tagsContainer>
    </ui:define>

    <ui:define name="output">

        <h:panelGroup layout="block"
                      styleClass="alert alert-warning"
                      rendered="#{!(tableShowcaseSingleCodeComponent.selectionAjaxType eq 'AJAX')}">
            <strong>Attention:</strong> Table selection will only work in ajax mode.
            <h:panelGroup rendered="#{!(tableShowcaseSingleCodeComponent.tableModelType eq 'NONE')}">Table model will only work
                in ajax mode.</h:panelGroup>
        </h:panelGroup>

        <h:panelGroup layout="block"
                      styleClass="alert alert-warning"
                      rendered="#{tableShowcaseSingleCodeComponent.tableModelType eq 'NONE' and tableShowcaseSingleCodeComponent.selectionAjaxType eq 'AJAX'}">
            <strong>Attention:</strong> Column show and hide information will not be stored when not using a table model.
            Try toggling columns and and press refresh button. In this case column hide information will be used by checking
            hideColumn attribute.
        </h:panelGroup>

        <h:panelGroup layout="block"
                      styleClass="alert alert-warning"
                      rendered="#{!(tableShowcaseSingleCodeComponent.tableModelType eq 'NONE') and tableShowcaseSingleCodeComponent.selectionAjaxType eq 'AJAX'}">
            <strong>Attention:</strong> Column show and hide information will be stored when using a table model. When
            using a table model column attribute hideColumn will be ignored if a corresponding information is found in model.
        </h:panelGroup>

        <h:panelGroup layout="block" rendered="#{tableShowcaseSingleCodeComponent.toolBarType eq 'TEXT'}">
            <style>
                .butter-table-toolbar-custom {
                    margin-top: 10px;
                }
            </style>
        </h:panelGroup>

        <b:table id="filterTable"
                 var="rowItem"
                 value="#{tableShowcaseSingleCodeComponent.stringRows}"
                 singleSelectionListener="#{tableShowcaseSingleCodeComponent}"
                 model="#{tableShowcaseSingleCodeComponent.tableModel}"
                 tableCondensed="#{tableShowcaseSingleCodeComponent.tableCondensed}"
                 tableStriped="#{tableShowcaseSingleCodeComponent.tableStriped}"
                 tableBordered="#{tableShowcaseSingleCodeComponent.tableBordered}"
                 showRefreshButton="#{tableShowcaseSingleCodeComponent.showRefreshButton}"
                 showToggleColumnButton="#{tableShowcaseSingleCodeComponent.showToggleColumnButton}"
                 sortAscendingClass="fa fa-sort-down"
                 sortDescendingClass="fa fa-sort-up"
                 sortUndefinedClass="fa fa-sort"
                 rendered="#{tableShowcaseSingleCodeComponent.rendered and !(tableShowcaseSingleCodeComponent.selectionAjaxType eq 'NONE')}">
            <f:facet name="toolbar">
                <h:panelGroup rendered="#{tableShowcaseSingleCodeComponent.toolBarType eq 'TEXT'}">
                    Custom toolbar text...
                </h:panelGroup>
                <h:panelGroup rendered="#{tableShowcaseSingleCodeComponent.toolBarType eq 'INPUT'}">
                    <b:text value="#{tableShowcaseSingleCodeComponent.filterValue}"
                            placeholder="Enter text and blur field..."
                            hideLabel="true"
                            autoFocus="true"
                            inputStyleClass="col-sm-6">
                        <f:ajax event="blur" render="filterTable"/>
                    </b:text>
                </h:panelGroup>
            </f:facet>
            <f:ajax render="output:nodeTitle"
                    disabled="#{tableShowcaseSingleCodeComponent.selectionAjaxType eq 'AJAX_DISABLED'}"/>
            <b:column id="column1"
                      colWidth="#{tableShowcaseSingleCodeComponent.colWidthColumn1}"
                      label="Readonly text">
                #{rowItem.a}
            </b:column>
            <b:column id="column2"
                      colWidth="#{tableShowcaseSingleCodeComponent.colWidthColumn2}"
                      label="Input text">
                <h:inputText value="#{rowItem.b}"/>
            </b:column>
            <b:column id="column3"
                      colWidth="#{tableShowcaseSingleCodeComponent.colWidthColumn3}"
                      sortColumnEnabled="false"
                      label="Action">
                <b:commandLink value="doSomething"
                               styleClass="btn btn-warning btn-xs"
                               action="#{tableShowcaseSingleCodeComponent.doSomethingWithRow(rowItem)}">
                    <f:ajax execute="@this" render="output:nodeTitle"/>
                </b:commandLink>
            </b:column>
            <b:column colWidth="#{tableShowcaseSingleCodeComponent.colWidthColumn4}"
                      hideColumn="true"
                      label="Readonly text (default hide)">
                #{rowItem.a}
            </b:column>
        </b:table>

        <b:table var="rowItem"
                 value="#{tableShowcaseSingleCodeComponent.stringRows}"
                 singleSelectionListener="#{tableShowcaseSingleCodeComponent}"
                 rendered="#{tableShowcaseSingleCodeComponent.rendered and tableShowcaseSingleCodeComponent.selectionAjaxType eq 'NONE'}">
            <b:column id="column1"
                      colWidth="#{tableShowcaseSingleCodeComponent.colWidthColumn1}"
                      label="C1">
                #{rowItem.a}
            </b:column>
            <b:column id="column2"
                      colWidth="#{tableShowcaseSingleCodeComponent.colWidthColumn2}"
                      label="C2">
                <h:inputText value="#{rowItem.b}"/>
            </b:column>
            <b:column id="column3"
                      colWidth="#{tableShowcaseSingleCodeComponent.colWidthColumn3}"
                      label="C3">
                <b:commandLink value="doSomething"
                               styleClass="btn btn-warning btn-xs"
                               action="#{tableShowcaseSingleCodeComponent.doSomethingWithRow(rowItem)}">
                    <f:ajax execute="@this" render="output:nodeTitle"/>
                </b:commandLink>
            </b:column>
            <b:column colWidth="#{tableShowcaseSingleCodeComponent.colWidthColumn4}"
                      hideColumn="true"
                      label="Readonly text (default hide)">
                #{rowItem.a}
            </b:column>
        </b:table>

        <h:panelGroup id="nodeTitle"
                      layout="block">
            <hr/>

            <h:panelGroup layout="block" styleClass="input-group"
                          rendered="#{tableShowcaseSingleCodeComponent.selectionAjaxType eq 'AJAX'}">
                <span class="input-group-addon">Table selected value:</span>
                <h:outputText value="#{tableShowcaseSingleCodeComponent.selectedValue.a}"
                              rendered="#{not empty tableShowcaseSingleCodeComponent.selectedValue}"
                              styleClass="form-control arquillian_output_value"/>
                <h:outputText value="-"
                              rendered="#{empty tableShowcaseSingleCodeComponent.selectedValue}"
                              styleClass="form-control arquillian_output_value"/>
            </h:panelGroup>

            <div class="input-group">
                <span class="input-group-addon">Button selected value:</span>
                <h:outputText value="#{tableShowcaseSingleCodeComponent.doSomethingWithRow}"
                              rendered="#{not empty tableShowcaseSingleCodeComponent.doSomethingWithRow}"
                              styleClass="form-control arquillian_output_value"/>
                <h:outputText value="-"
                              rendered="#{empty tableShowcaseSingleCodeComponent.doSomethingWithRow}"
                              styleClass="form-control arquillian_output_value"/>
            </div>
        </h:panelGroup>
    </ui:define>

    <ui:define name="other">
        <showcase:showcaseComplexExampleComponent component="#{tableShowcaseSingleCodeComponent}"/>

        <script type="text/javascript">
            jQuery(document).ready(function () {
                setActiveNavigation('table');
            });
        </script>
    </ui:define>
</ui:composition>

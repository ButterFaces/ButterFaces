<ui:composition template="/WEB-INF/templates/defaultComponentBase.xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:common="http://xmlns.jcp.org/jsf/composite/common"
                xmlns:b="http://butterfaces.org/components">

    <ui:define name="header">
        <strong>b:tree</strong> The tree tag renders an HTML element of the type "div" using <a
            href="https://trivial-components.github.io/trivial-components/tree.html"
            target="_blank">Trivial Components Tree</a>.
    </ui:define>

    <ui:define name="tagsContainers">
        <common:tagsContainer label="Tag attributes">
            <common:tagBooleanControl label="rendered" value="#{treeShowcase.rendered}"/>
            <common:tagBooleanControl label="hideRootNode" value="#{treeShowcase.hideRootNode}"/>
            <common:tagStringControl label="placeholder" value="#{treeShowcase.placeholder}"/>
            <common:tagStringControl label="spinnerText" value="#{treeShowcase.spinnerText}"/>
            <common:tagStringControl label="noEntriesText" value="#{treeShowcase.noEntriesText}"/>
            <common:tagEnumControl label="searchBarMode"
                                   value="#{treeShowcase.selectedSearchBarModeType}"
                                   values="#{treeShowcase.seachBarModeTypes}"/>
        </common:tagsContainer>

        <common:tagsContainer label="Tag controls">
            <common:tagEnumControl label="template"
                                   value="#{treeShowcase.selectedTreeTemplateType}"
                                   values="#{treeShowcase.treeTemplateTypes}"
                                   renderChildrenPopover="true"
                                   popoverTitle="Using templates"
                                   popoverContentMarkerClass="treePopoverContent"/>
            <common:tagEnumControl label="ajax selection"
                                   value="#{treeShowcase.selectionAjaxType}"
                                   values="#{treeShowcase.ajaxSelectionTypes}"/>
            <common:tagEnumControl label="icons"
                                   value="#{treeShowcase.showcaseTreeNode.selectedIconType}"
                                   values="#{treeShowcase.iconTypes}"/>
            <common:tagBooleanControl label="nodes expanded" value="#{treeShowcase.allExpanded}"/>
        </common:tagsContainer>
    </ui:define>

    <ui:define name="output">

        <h:panelGroup layout="block"
                      styleClass="alert alert-warning"
                      rendered="#{!(treeShowcase.selectionAjaxType eq 'AJAX')}">
            <strong>Attention:</strong> Tree selection will only work in ajax mode.
        </h:panelGroup>

        <b:tree id="tree"
                value="#{treeShowcase.showcaseTreeNode.tree}"
                nodeSelectionListener="#{treeShowcase}"
                nodeExpansionListener="#{treeShowcase}"
                spinnerText="#{treeShowcase.spinnerText}"
                noEntriesText="#{treeShowcase.noEntriesText}"
                searchBarMode="#{treeShowcase.selectedSearchBarModeType.label}"
                placeholder="#{treeShowcase.placeholder}"
                hideRootNode="#{treeShowcase.hideRootNode}"
                rendered="#{treeShowcase.rendered and not treeShowcase.ajaxRendered}">
            <c:if test="#{treeShowcase.selectedTreeTemplateType eq 'CUSTOM'}">
                <f:facet name="template">
                    <strong>{{title}}</strong>
                    <div>Created: {{createDate}}</div>
                    <div>UUID: {{uuid}}</div>
                </f:facet>
            </c:if>
        </b:tree>

        <b:tree id="treeWithAjax"
                value="#{treeShowcase.showcaseTreeNode.tree}"
                searchBarMode="#{treeShowcase.selectedSearchBarModeType.label}"
                nodeSelectionListener="#{treeShowcase}"
                nodeExpansionListener="#{treeShowcase}"
                placeholder="#{treeShowcase.placeholder}"
                spinnerText="#{treeShowcase.spinnerText}"
                noEntriesText="#{treeShowcase.noEntriesText}"
                hideRootNode="#{treeShowcase.hideRootNode}"
                toManyVisibleItemsRenderDelay="#{treeShowcase.toManyVisibleItemsRenderDelay}"
                toManyVisibleItemsThreshold="#{treeShowcase.toManyVisibleItemsThreshold}"
                rendered="#{treeShowcase.rendered and treeShowcase.ajaxRendered}">
            <c:if test="#{treeShowcase.selectedTreeTemplateType eq 'CUSTOM'}">
                <f:facet name="template">
                    <strong>{{title}}</strong>
                    <div>Created: {{createDate}}</div>
                    <div>UUID: {{uuid}}</div>
                </f:facet>
            </c:if>
            <f:ajax render="nodeTitle" disabled="#{treeShowcase.ajaxDisabled}"/>
            <f:ajax event="toggle" render="nodeTitle" disabled="#{treeShowcase.ajaxDisabled}"/>
        </b:tree>

        <h:panelGroup rendered="#{treeShowcase.ajaxRendered}">
            <hr/>

            <div class="input-group">
                <span class="input-group-addon">Selected value:</span>
                <h:panelGroup id="nodeTitle" layout="block">
                    <h:outputText value="#{treeShowcase.selectedNode.title}"
                                  rendered="#{not empty treeShowcase.selectedNode}"
                                  styleClass="form-control arquillian_output_value"/>
                    <h:outputText value="-"
                                  rendered="#{empty treeShowcase.selectedNode}"
                                  styleClass="form-control arquillian_output_value"/>
                </h:panelGroup>
            </div>
        </h:panelGroup>


        <b:activateLibraries/>
    </ui:define>

    <ui:define name="other">
        <common:codeExamples component="#{treeShowcase}"/>

        <script type="text/javascript">
            jQuery(document).ready(function () {
                setActiveNavigation('tree');
            });
        </script>
    </ui:define>
</ui:composition>

<ui:composition template="/WEB-INF/templates/defaultComponentBase.xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:b="http://butterfaces.org/components"
                xmlns:showcase="http://xmlns.jcp.org/jsf/composite/cc"
                xmlns:common="http://xmlns.jcp.org/jsf/composite/common"
                xmlns:f="http://xmlns.jcp.org/jsf/core">

    <ui:define name="header">
        <strong>b:textArea</strong> The textArea tag renders an HTML "textarea" element.
    </ui:define>

    <ui:define name="tagsContainers">
        <common:tagsContainer label="Tag attributes">
            <common:tagStringControl label="label" value="#{textAreaShowcase.label}" />
            <common:tagBooleanControl label="hideLabel" value="#{textAreaShowcase.hideLabel}"/>
            <common:tagBooleanControl label="readonly" value="#{textAreaShowcase.readonly}" />
            <common:tagBooleanControl label="required" value="#{textAreaShowcase.required}" />
            <common:tagBooleanControl label="disabled" value="#{textAreaShowcase.disabled}" />
            <common:tagBooleanControl label="rendered" value="#{textAreaShowcase.rendered}" />
            <common:tagStringControl label="maxLength" value="#{textAreaShowcase.maxLength}" />
            <common:tagBooleanControl label="expandable" value="#{textAreaShowcase.expandable}" />
            <common:tagEnumControl label="styleClass"
                                     value="#{textAreaShowcase.styleClass}"
                                     values="#{textAreaShowcase.styleClasses}"/>
        </common:tagsContainer>

        <common:tagsContainer label="HTML5 tag attributes">
            <common:tagStringControl label="placeholder" value="#{textAreaShowcase.placeholder}"/>
            <common:tagBooleanControl label="autofocus" value="#{textAreaShowcase.autoFocus}"/>
        </common:tagsContainer>

        <common:tagsContainer label="Tag controls">
            <common:tagEnumControl label="ajax"
                                     value="#{textAreaShowcase.ajaxType}"
                                     values="#{textAreaShowcase.ajaxTypes}"
                                     renderChildrenPopover="true"
                                     popoverTitle="Add ajax child"
                                     popoverContentMarkerClass="ajaxPopoverContent"/>
            <common:tagStringControl label="tooltip" value="#{textAreaShowcase.tooltip}" />
            <common:tagBooleanControl label="validate" value="#{textAreaShowcase.validation}" />
        </common:tagsContainer>
    </ui:define>

    <ui:define name="output">
        <common:showcaseOuputComponent id="outputComponent" activeComponentNavigationId="textarea" component="#{textAreaShowcase}">

            <h:panelGroup layout="block" styleClass="alert alert-info" rendered="#{not empty textAreaShowcase.placeholder}">
                <strong>Hint:</strong> you can use multiline placeholders by adding '\n'.
            </h:panelGroup>

            <b:textArea id="textArea"
                        label="#{textAreaShowcase.label}"
                        hideLabel="#{textAreaShowcase.hideLabel}"
                        value="#{textAreaShowcase.value}"
                        readonly="#{textAreaShowcase.readonly}"
                        required="#{textAreaShowcase.required}"
                        disabled="#{textAreaShowcase.disabled}"
                        rendered="#{textAreaShowcase.rendered}"
                        maxLength="#{textAreaShowcase.maxLength}"
                        expandable="#{textAreaShowcase.expandable}"
                        placeholder="#{textAreaShowcase.placeholder}"
                        autoFocus="#{textAreaShowcase.autoFocus}"
                        onkeyup="console.log('ButterFaces.Test: check onkeyup')"
                        styleClass="#{textAreaShowcase.styleClass}">
                <f:ajax event="keyup"
                        execute="textArea"
                        render="output:outputComponent:outputValues output:other"
                        disabled="#{not textAreaShowcase.ajax}" />
                <f:validateLength minimum="2"
                                  maximum="10"
                                  disabled="#{not textAreaShowcase.validation}" />
                <b:tooltip rendered="#{not empty textAreaShowcase.tooltip}">
                    #{textAreaShowcase.tooltip}
                </b:tooltip>
            </b:textArea>
        </common:showcaseOuputComponent>
    </ui:define>

    <ui:define name="other">
        <common:codeExamples component="#{textAreaShowcase}" />
        <b:activateLibraries />
    </ui:define>

</ui:composition>
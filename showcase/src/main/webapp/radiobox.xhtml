<ui:composition template="/WEB-INF/templates/defaultComponentBase.xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:b="http://butterfaces.org/components"
                xmlns:common="http://xmlns.jcp.org/jsf/composite/common"
                xmlns:f="http://xmlns.jcp.org/jsf/core">

    <ui:define name="header">
        <strong>b:radioBox</strong> The radioBox tag renders an HTML "input" elements of the type "radio". This component is designed for situations where you want to display a mutually exclusive list of options to the user as a set of radio buttons. This tag supports two layout modes:lineDirection (horizontal, the default) and pageDirection (vertical).
    </ui:define>

    <ui:define name="tagsContainers">
        <common:tagsContainer label="Tag attributes">
            <common:tagStringControl label="label" value="#{radioBoxShowcase.label}"/>
            <common:tagBooleanControl label="hideLabel" value="#{radioBoxShowcase.hideLabel}"/>
            <common:tagBooleanControl label="readonly" value="#{radioBoxShowcase.readonly}"/>
            <common:tagBooleanControl label="required" value="#{radioBoxShowcase.required}"/>
            <common:tagBooleanControl label="disabled" value="#{radioBoxShowcase.disabled}"/>
            <common:tagBooleanControl label="rendered" value="#{radioBoxShowcase.rendered}"/>
            <common:tagEnumControl label="styleClass"
                                   value="#{radioBoxShowcase.styleClass}"
                                   values="#{radioBoxShowcase.styleClasses}"/>
        </common:tagsContainer>

        <common:tagsContainer label="Tag controls">
            <common:tagEnumControl label="examples"
                                   value="#{radioBoxShowcase.exampleType}"
                                   values="#{radioBoxShowcase.exampleTypes}"
                                   renderChildrenPopover="true"
                                   popoverTitle="Add selectItems children"
                                   popoverContentMarkerClass="comboboxPopoverContent"/>
            <!--common:tagEnumControl label="layout type"
                                   value="#{radioBoxShowcase.radioBoxLayoutType}"
                                   values="#{radioBoxShowcase.radioLayoutTypes}"
                                   renderChildrenPopover="true"
                                   popoverTitle="Add selectItems children"
                                   popoverContentMarkerClass="radioboxLayoutPopoverContent"/-->
            <common:tagEnumControl label="ajax"
                                   value="#{radioBoxShowcase.ajaxType}"
                                   values="#{radioBoxShowcase.ajaxTypes}"
                                   renderChildrenPopover="true"
                                   popoverTitle="Add ajax child"
                                   popoverContentMarkerClass="ajaxPopoverContent"/>
            <common:tagStringControl label="tooltip" value="#{radioBoxShowcase.tooltip}"/>
        </common:tagsContainer>
    </ui:define>

    <ui:define name="output">
        <common:showcaseOuputComponent id="outputComponent"
                                       activeComponentNavigationId="radiobox"
                                       component="#{radioBoxShowcase}">
            <b:radioBox label="#{radioBoxShowcase.label}"
                        value="#{radioBoxShowcase.value}"
                        values="#{radioBoxShowcase.values}"
                        hideLabel="#{radioBoxShowcase.hideLabel}"
                        readonly="#{radioBoxShowcase.readonly}"
                        required="#{radioBoxShowcase.required}"
                        rendered="#{radioBoxShowcase.rendered}"
                        disabled="#{radioBoxShowcase.disabled}"
                        layout="#{radioBoxShowcase.radioBoxLayoutType.label}"
                        styleClass="#{radioBoxShowcase.styleClass}">
                <f:ajax event="change"
                        execute="@this"
                        render="output:outputComponent:outputValues output:other"
                        disabled="#{not radioBoxShowcase.ajax}"/>
                <b:tooltip rendered="#{not empty radioBoxShowcase.tooltip}">
                    #{radioBoxShowcase.tooltip}
                </b:tooltip>
            </b:radioBox>
        </common:showcaseOuputComponent>
    </ui:define>

    <ui:define name="other">
        <common:codeExamples component="#{radioBoxShowcase}"/>
        <b:activateLibraries/>
    </ui:define>

</ui:composition>
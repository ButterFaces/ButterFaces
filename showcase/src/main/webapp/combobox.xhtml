<ui:composition template="/WEB-INF/templates/defaultComponentBase.xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:showcase="http://java.sun.com/jsf/composite/cc"
                xmlns:f="http://java.sun.com/jsf/core">

    <ui:define name="header">
        <strong>b:comboBox</strong> The comboBox tag renders an HTML "select" element with a "size" of 1 without the "multiple" attribute. This component is designed for situations where you want to display a single-select list of options to the user in a menu that displays one item at a time. The main difference between select lists and menus in JSF is the "size" attribute. Menus always have a size of one, while lists can have a variable size.
    </ui:define>

    <ui:define name="tagsContainers">
        <showcase:tagsContainer label="Tag attributes">
            <showcase:tagStringControl label="label" value="#{comboBoxShowcaseSingleCodeComponent.label}" />
            <showcase:tagStringControl label="tooltip" value="#{comboBoxShowcaseSingleCodeComponent.tooltip}" />
            <showcase:tagBooleanControl label="hideLabel" value="#{comboBoxShowcaseSingleCodeComponent.hideLabel}" />
            <showcase:tagBooleanControl label="readonly" value="#{comboBoxShowcaseSingleCodeComponent.readonly}" />
            <showcase:tagBooleanControl label="required" value="#{comboBoxShowcaseSingleCodeComponent.required}" />
            <showcase:tagBooleanControl label="rendered" value="#{comboBoxShowcaseSingleCodeComponent.rendered}" />
            <showcase:tagBooleanControl label="filterable" value="#{comboBoxShowcaseSingleCodeComponent.filterable}" />
            <showcase:tagEnumControl label="styleClass"
                                     value="#{comboBoxShowcaseSingleCodeComponent.styleClass}"
                                     values="#{comboBoxShowcaseSingleCodeComponent.styleClasses}"/>
            <showcase:tagEnumControl label="inputStyleClass"
                                     value="#{comboBoxShowcaseSingleCodeComponent.inputStyleClass}"
                                     values="#{comboBoxShowcaseSingleCodeComponent.inputStyleClasses}"/>
            <showcase:tagEnumControl label="labelStyleClass"
                                     value="#{comboBoxShowcaseSingleCodeComponent.labelStyleClass}"
                                     values="#{comboBoxShowcaseSingleCodeComponent.labelStyleClasses}"/>
        </showcase:tagsContainer>

        <showcase:tagsContainer label="Tag controls">
            <showcase:tagEnumControl label="combo box"
                                     value="#{comboBoxShowcaseSingleCodeComponent.comboBoxValueType}"
                                     values="#{comboBoxShowcaseSingleCodeComponent.comboBoxTypes}"
                                     renderChildrenPopover="true"
                                     popoverTitle="Add selectItems children"
                                     popoverContentMarkerClass="comboboxPopoverContent"/>
            <showcase:tagEnumControl label="ajax"
                                     value="#{comboBoxShowcaseSingleCodeComponent.ajaxType}"
                                     values="#{comboBoxShowcaseSingleCodeComponent.ajaxTypes}"
                                     renderChildrenPopover="true"
                                     popoverTitle="Add ajax child"
                                     popoverContentMarkerClass="ajaxPopoverContent"/>
        </showcase:tagsContainer>
    </ui:define>

    <ui:define name="output">
        <showcase:showcaseOuputComponentDeprecated id="outputComponent" activeComponentNavigationId="combobox" component="#{comboBoxShowcaseSingleCodeComponent}">
            <showcase:comboBoxShowcase component="#{comboBoxShowcaseSingleCodeComponent}"
                                       rendered="true"/>
        </showcase:showcaseOuputComponentDeprecated>
    </ui:define>

    <ui:define name="other">
        <showcase:showcaseSimpleExampleComponent component="#{comboBoxShowcaseSingleCodeComponent}" />
    </ui:define>

</ui:composition>
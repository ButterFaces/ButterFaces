<ui:composition template="/WEB-INF/templates/defaultComponentBase.xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:showcase="http://xmlns.jcp.org/jsf/composite/cc"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:b="http://butterfaces.larmic.de/components"
                xmlns:f="http://xmlns.jcp.org/jsf/core">

    <ui:define name="header">
        <strong>b:comboBox</strong> The comboBox tag renders an HTML "select" element with a "size" of 1 without the "multiple" attribute. This component is designed for situations where you want to display a single-select list of options to the user in a menu that displays one item at a time. The main difference between select lists and menus in JSF is the "size" attribute. Menus always have a size of one, while lists can have a variable size.
    </ui:define>

    <ui:define name="tagsContainers">
        <showcase:tagsContainer label="Tag attributes">
            <showcase:tagStringControl label="label" value="#{comboBoxShowcase.label}" />
            <showcase:tagBooleanControl label="hideLabel" value="#{comboBoxShowcase.hideLabel}" />
            <showcase:tagBooleanControl label="readonly" value="#{comboBoxShowcase.readonly}" />
            <showcase:tagBooleanControl label="required" value="#{comboBoxShowcase.required}" />
            <showcase:tagBooleanControl label="rendered" value="#{comboBoxShowcase.rendered}" />
            <showcase:tagBooleanControl label="filterable" value="#{comboBoxShowcase.filterable}" />
            <showcase:tagEnumControl label="styleClass"
                                     value="#{comboBoxShowcase.styleClass}"
                                     values="#{comboBoxShowcase.styleClasses}"/>
        </showcase:tagsContainer>

        <showcase:tagsContainer label="HTML5 tag attributes">
            <showcase:tagBooleanControl label="autofocus" value="#{comboBoxShowcase.autoFocus}"/>
        </showcase:tagsContainer>

        <showcase:tagsContainer label="Tag controls">
            <showcase:tagEnumControl label="combo box"
                                     value="#{comboBoxShowcase.comboBoxValueType}"
                                     values="#{comboBoxShowcase.comboBoxTypes}"
                                     renderChildrenPopover="true"
                                     popoverTitle="Add selectItems children"
                                     popoverContentMarkerClass="comboboxPopoverContent"/>
            <showcase:tagEnumControl label="ajax"
                                     value="#{comboBoxShowcase.ajaxType}"
                                     values="#{comboBoxShowcase.ajaxTypes}"
                                     renderChildrenPopover="true"
                                     popoverTitle="Add ajax child"
                                     popoverContentMarkerClass="ajaxPopoverContent"/>
            <showcase:tagStringControl label="tooltip" value="#{comboBoxShowcase.tooltip}" />
        </showcase:tagsContainer>
    </ui:define>

    <ui:define name="output">
        <showcase:showcaseOuputComponent id="outputComponent" activeComponentNavigationId="combobox" component="#{comboBoxShowcase}">
            <b:comboBox label="#{comboBoxShowcase.label}"
                        value="#{comboBoxShowcase.value}"
                        hideLabel="#{comboBoxShowcase.hideLabel}"
                        tooltip="#{comboBoxShowcase.tooltip}"
                        readonly="#{comboBoxShowcase.readonly}"
                        required="#{comboBoxShowcase.required}"
                        filterable="#{comboBoxShowcase.filterable}"
                        autoFocus="#{comboBoxShowcase.autoFocus}"
                        styleClass="#{comboBoxShowcase.styleClass}"
                        rendered="#{comboBoxShowcase.rendered}">
                <f:selectItems value="#{comboBoxShowcase.values}" />
                <f:ajax event="change"
                        execute="@this"
                        render="output:outputComponent:outputValues output:other"
                        disabled="#{not comboBoxShowcase.ajax}" />
                <b:tooltip rendered="#{not empty comboBoxShowcase.tooltip}">
                    #{comboBoxShowcase.tooltip}
                </b:tooltip>
                <c:if test="#{comboBoxShowcase.converterActive}">
                    <f:converter converterId="fooConverter"/>
                </c:if>
            </b:comboBox>
        </showcase:showcaseOuputComponent>
    </ui:define>

    <ui:define name="other">
        <showcase:codeExamples component="#{comboBoxShowcase}" />
        <b:activateLibraries />
    </ui:define>

</ui:composition>